# Generated by Django 4.2.21 on 2025-05-09 10:41

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='FAQ',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(choices=[('administrative', 'Administrative'), ('fiscal', 'Fiscal'), ('tourism', 'Tourism'), ('investment', 'Investment'), ('real_estate', 'Real Estate'), ('general', 'General'), ('account', 'Account')], default='general', max_length=20, verbose_name='category')),
                ('question', models.CharField(max_length=255, verbose_name='question')),
                ('answer', models.TextField(verbose_name='answer')),
                ('language', models.CharField(default='fr', max_length=10, verbose_name='language')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('is_active', models.BooleanField(default=True, verbose_name='is active')),
                ('order', models.IntegerField(default=0, verbose_name='display order')),
            ],
            options={
                'ordering': ['category', 'order', 'created_at'],
            },
        ),
        migrations.CreateModel(
            name='Resource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(choices=[('administrative', 'Administrative'), ('fiscal', 'Fiscal'), ('tourism', 'Tourism'), ('investment', 'Investment'), ('real_estate', 'Real Estate'), ('legal', 'Legal'), ('social', 'Social'), ('embassy', 'Embassy/Consulate'), ('guide', 'Guide'), ('other', 'Other')], max_length=20, verbose_name='category')),
                ('title', models.CharField(max_length=255, verbose_name='title')),
                ('description', models.TextField(verbose_name='description')),
                ('available_languages', models.CharField(default='fr', max_length=100, verbose_name='available languages')),
                ('available_formats', models.CharField(choices=[('pdf', 'PDF'), ('doc', 'DOC/DOCX'), ('xls', 'XLS/XLSX'), ('ppt', 'PPT/PPTX'), ('image', 'Image'), ('video', 'Video'), ('link', 'External Link'), ('text', 'Text')], default='pdf', max_length=100, verbose_name='available formats')),
                ('size_kb', models.IntegerField(blank=True, null=True, verbose_name='size in KB')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('is_active', models.BooleanField(default=True, verbose_name='is active')),
                ('view_count', models.IntegerField(default=0, verbose_name='view count')),
                ('download_count', models.IntegerField(default=0, verbose_name='download count')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_resources', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ResourceLink',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language', models.CharField(max_length=10, verbose_name='language')),
                ('url', models.URLField(verbose_name='URL')),
                ('title', models.CharField(blank=True, max_length=255, verbose_name='title')),
                ('resource', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='links', to='resources.resource')),
            ],
        ),
        migrations.CreateModel(
            name='ResourceFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language', models.CharField(max_length=10, verbose_name='language')),
                ('file', models.FileField(upload_to='resources/%Y/%m/', verbose_name='file')),
                ('file_format', models.CharField(max_length=20, verbose_name='file format')),
                ('file_size', models.IntegerField(blank=True, null=True, verbose_name='file size in KB')),
                ('resource', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='files', to='resources.resource')),
            ],
        ),
        migrations.CreateModel(
            name='ConsulateEmbassy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country', models.CharField(max_length=100, verbose_name='country')),
                ('city', models.CharField(max_length=100, verbose_name='city')),
                ('entity_type', models.CharField(choices=[('embassy', 'Embassy'), ('consulate', 'Consulate'), ('honorary_consulate', 'Honorary Consulate')], max_length=20, verbose_name='entity type')),
                ('address', models.TextField(verbose_name='address')),
                ('phone', models.CharField(blank=True, max_length=50, verbose_name='phone')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email')),
                ('website', models.URLField(blank=True, verbose_name='website')),
                ('working_hours', models.TextField(blank=True, verbose_name='working hours')),
                ('services', models.TextField(blank=True, verbose_name='services')),
                ('latitude', models.FloatField(blank=True, null=True, verbose_name='latitude')),
                ('longitude', models.FloatField(blank=True, null=True, verbose_name='longitude')),
            ],
            options={
                'verbose_name': 'consulate/embassy',
                'verbose_name_plural': 'consulates/embassies',
                'unique_together': {('country', 'city', 'entity_type')},
            },
        ),
    ]
